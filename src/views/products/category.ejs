<%- contentFor('title') %><%= category.charAt(0).toUpperCase() + category.slice(1) %>s

<%- contentFor('body') %>
<div class="row">
    <!-- Filters -->
    <div class="col-md-3">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Filters</h5>
            </div>
            <div class="card-body">
                <form id="filterForm">
                    <div class="mb-3">
                        <label class="form-label">Price Range</label>
                        <div class="input-group mb-2">
                            <input type="number" class="form-control" name="minPrice" placeholder="Min" min="0">
                            <span class="input-group-text">-</span>
                            <input type="number" class="form-control" name="maxPrice" placeholder="Max" min="0">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Brand</label>
                        <select class="form-select" name="brand">
                            <option value="">All Brands</option>
                            <% brands.forEach(brand => { %>
                                <option value="<%= brand %>"><%= brand %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Sort By</label>
                        <select class="form-select" name="sort">
                            <option value="-createdAt">Newest First</option>
                            <option value="price">Price: Low to High</option>
                            <option value="-price">Price: High to Low</option>
                            <option value="brand">Brand: A to Z</option>
                            <option value="-brand">Brand: Z to A</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="col-md-9">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2><%= category.charAt(0).toUpperCase() + category.slice(1) %>s</h2>
            <div class="text-muted">
                Showing <%= products.length %> products
            </div>
        </div>

        <div class="row row-cols-1 row-cols-md-3 g-4" id="productsContainer">
            <% products.forEach(product => { %>
                <div class="col">
                    <div class="card h-100 product-card">
                        <img src="<%= product.images[0]?.url || '/images/placeholder.jpg' %>" 
                             class="card-img-top product-image" 
                             alt="<%= product.brand %> <%= product.model %>">
                        <div class="card-body">
                            <h5 class="card-title"><%= product.brand %> <%= product.model %></h5>
                            <p class="card-text text-truncate"><%= product.description %></p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="fs-5 fw-bold">$<%= product.price.toFixed(2) %></span>
                                <span class="badge bg-<%= product.stock > 0 ? 'success' : 'danger' %>">
                                    <%= product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
                                </span>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex gap-2">
                                <button class="btn btn-primary flex-grow-1" 
                                        onclick="location.href='/products/<%= product._id %>'"
                                        <%= product.stock === 0 ? 'disabled' : '' %>>
                                    View Details
                                </button>
                                <button class="btn btn-secondary" 
                                        onclick="location.href='/products/<%= product._id %>/edit'">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-danger" 
                                        onclick="deleteProduct('<%= product._id %>')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>

        <!-- Pagination -->
        <% if (pages > 1) { %>
            <nav class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item <%= current === 1 ? 'disabled' : '' %>">
                        <a class="page-link" href="?page=<%= current - 1 %>">&laquo;</a>
                    </li>
                    <% for(let i = 1; i <= pages; i++) { %>
                        <li class="page-item <%= current === i ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                    <li class="page-item <%= current === pages ? 'disabled' : '' %>">
                        <a class="page-link" href="?page=<%= current + 1 %>">&raquo;</a>
                    </li>
                </ul>
            </nav>
        <% } %>
    </div>
</div>

<%- contentFor('script') %>
<script>
// Filter form handling
document.getElementById('filterForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    const params = new URLSearchParams();

    for (const [key, value] of formData.entries()) {
        if (value) {
            params.append(key, value);
        }
    }

    // Add current page if it exists
    const currentPage = new URLSearchParams(window.location.search).get('page');
    if (currentPage) {
        params.append('page', currentPage);
    }

    window.location.search = params.toString();
});

// Preserve filter values from URL
window.addEventListener('load', function() {
    const params = new URLSearchParams(window.location.search);
    const form = document.getElementById('filterForm');
    
    for (const [key, value] of params.entries()) {
        const input = form.elements[key];
        if (input) {
            input.value = value;
        }
    }
});

// Delete product function
function deleteProduct(productId) {
    if (confirm('Are you sure you want to delete this product? This action cannot be undone.')) {
        fetch(`/products/${productId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Remove the product card from the UI
                const productCard = document.querySelector(`[onclick*="${productId}"]`).closest('.col');
                productCard.remove();
                
                // Update product count
                const countElement = document.querySelector('.text-muted');
                const currentCount = parseInt(countElement.textContent.match(/\d+/)[0]);
                countElement.textContent = `Showing ${currentCount - 1} products`;
            } else {
                alert('Failed to delete product: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while deleting the product');
        });
    }
}
</script> 